// <auto-generated />
using Fleet.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fleet.Common.Migrations
{
    [DbContext(typeof(FleetCommonDbContext))]
    partial class FleetCommonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fleet.Common.Data.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrands");
                });

            modelBuilder.Entity("Fleet.Common.Data.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.ToTable("VehicleModels");
                });

            modelBuilder.Entity("Fleet.Common.Data.VehicleVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalName")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("VehicleVariants");
                });

            modelBuilder.Entity("Fleet.Common.Data.VehicleModel", b =>
                {
                    b.HasOne("Fleet.Common.Data.VehicleBrand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Fleet.Common.Data.VehicleVariant", b =>
                {
                    b.HasOne("Fleet.Common.Data.VehicleModel", "Model")
                        .WithMany("Variants")
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Fleet.Common.Data.VehicleBodySpecs", "BodySpecs", b1 =>
                        {
                            b1.Property<int>("VehicleVariantId")
                                .HasColumnType("int");

                            b1.Property<string>("BodyStyle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("NumDoors")
                                .HasColumnType("int");

                            b1.HasKey("VehicleVariantId");

                            b1.ToTable("VehicleVariants");

                            b1.ToJson("BodySpecs");

                            b1.WithOwner()
                                .HasForeignKey("VehicleVariantId");
                        });

                    b.OwnsOne("Fleet.Common.Data.VehicleTechnicalSpecs", "TechnicalSpecs", b1 =>
                        {
                            b1.Property<int>("VehicleVariantId")
                                .HasColumnType("int");

                            b1.Property<decimal>("ConsumptionKmL")
                                .HasPrecision(27, 9)
                                .HasColumnType("decimal(27,9)");

                            b1.Property<string>("CylinderArrangement")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DrivertrainType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FuelType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("NumCylinders")
                                .HasColumnType("int");

                            b1.Property<int>("TransmissionSpeeds")
                                .HasColumnType("int");

                            b1.Property<string>("TransmissionType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VehicleVariantId");

                            b1.ToTable("VehicleVariants");

                            b1.ToJson("TechnicalSpecs");

                            b1.WithOwner()
                                .HasForeignKey("VehicleVariantId");
                        });

                    b.Navigation("BodySpecs")
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("TechnicalSpecs")
                        .IsRequired();
                });

            modelBuilder.Entity("Fleet.Common.Data.VehicleBrand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Fleet.Common.Data.VehicleModel", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
